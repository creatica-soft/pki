create table if not exists nonces(nonce TEXT PRIMARY KEY ASC, ip TEXT, expires INTEGER);
create index if not exists ip_idx on nonces(ip);
create index if not exists expires_idx on nonces(expires);
create table if not exists accounts(id TEXT PRIMARY KEY ASC, status INTEGER, termsOfServiceAgreed INTEGER, jwk_hash TEXT, kid TEXT, jwk BLOB, contacts BLOB, externalAccountBinding BLOB);
create index if not exists jwk_hash_idx on accounts(jwk_hash);
create index if not exists account_status_idx on accounts(status);
create index if not exists account_kid_idx on accounts(kid);
PRAGMA foreign_keys = ON;
create table if not exists orders(id TEXT PRIMARY KEY ASC, status INTEGER, expires INTEGER, identifiers BLOB, notBefore INTEGER, notAfter INTEGER, certSerial TEXT, account TEXT, foreign key(account) references accounts(id) ON DELETE CASCADE);
create index if not exists order_status_idx on orders(status);
create index if not exists order_expires_idx on orders(expires);
create index if not exists notBefore_idx on orders(notBefore);
create index if not exists notAfter_idx on orders(notAfter);
PRAGMA foreign_keys = ON;
create table if not exists authorizations(id TEXT PRIMARY KEY ASC, identifier BLOB, status INTEGER, expires INTEGER, wildcard INTEGER, "order" TEXT, foreign key("order") references orders(id) ON DELETE CASCADE);
create index if not exists authorization_status_idx on authorizations(status);
create index if not exists authorization_expires_idx on authorizations(expires);
PRAGMA foreign_keys = ON;
create table if not exists challenges(id TEXT PRIMARY KEY ASC, type TEXT, url TEXT, status INTEGER, token TEXT, error TEXT, validated INTEGER, authorization TEXT, foreign key(authorization) references authorizations(id) ON DELETE CASCADE);
create index if not exists type_idx on challenges(type);
create index if not exists challenge_status_idx on challenges(status);
create index if not exists token_idx on challenges(token);
create index if not exists validated_idx on challenges(validated);
