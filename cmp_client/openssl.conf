HOME = .
openssl_conf = openssl_init
config_diagnostics = 1

[openssl_init]
providers = provider_sect

[provider_sect]
default = default_sect

[default_sect]
activate = 1

[cmp]
server = https://$PKI_DNS:443
path = cmp/
tls_used = 1
tls_trusted = /etc/ssl/root_ca.pem
tls_extra = /etc/ssl/signing_ca.pem
tls_key = priv.key
implicit_confirm = 0 # set to 0 for explicit certificate confirmations or 1 - for no certconf messages
san_nodefault = 1 #to avoid having CN from the client's certificate subject to be placed in certReq certTemplate SAN extension as DNS
cmd = cr #default command
newkey = test.example.internal.key # rsa private key generated by "openssl genrsa -out test.example.internal.key 2048"
#newkey = test2.example.internal.key  # ec private key generated by "openssl genpkey -algorithm ec -pkeyopt ec_paramgen_curve:P-384 -out test2.example.internal.key"
#newkey = test3.example.internal.key  # dsa private key generated by "openssl dsaparam -out dsaparam 1024; openssl gendsa -out test3.example.internal.key dsaparam"

subject = "/CN=test.example.internal" # subject of a certificate to request, update or revoke
certout = test.example.internal.crt # file where to put the issued or updated certificate
trusted = /etc/ssl/root_ca.pem
untrusted = /etc/ssl/signing_ca.pem

# Client authentication
secret = # disable PBM
cert = user.pem # client certificate obtained via https://pki.example.com/cmp/cert_request.html
key = priv.key # private key for the client certificate obtained by "openssl genrsa -out priv.key 2048
#key = dsa.key
#key = ec.key
keep-alive = 0
total_timeout = 3

[ir]
cmd = ir
digest = sha1
mac = hmac-sha1
ref = #SenderKID
secret = pass:"get a key from https://$PKI_DNS/key_request.html"
newkey = priv.key
subject = "/CN=username"
certout = user.pem
recipient = "/CN=Creatica Signing CA"
reqexts = ext_1
cert = #
key = #

[p10cr]
cmd = p10cr
subject = 
san_nodefault =
newkey =

[cr]
cmd = cr

[kur]
# Certificate update
cmd = kur
oldcert = $cmp::certout # test.example.internal.crt
subject = 

[rr]
# Certificate revocation
cmd = rr
oldcert = $cmp::certout # test.example.internal.crt
cacertsout =
certout = 
newkey = 
subject =
san_nodefault = 

[genm]
cmd = genm
cacertsout =
certout = 
newkey = 
subject = 
san_nodefault = 

[ssl_default_sect]
MinProtocol = TLSv1.2
MaxProtocol = TLSv1.2

# see https://www.openssl.org/docs/man3.0/man5/x509v3_config.html
[v3_ext]
keyUsage = digitalSignature,nonRepudiation,keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = DNS:test.example.internal.com,DNS:test2.example.internal.com,IP:10.2.3.4
[ext_1]
keyUsage = digitalSignature
[ext_2]
keyUsage = digitalSignature,nonRepudiation
[ext_3]
keyUsage = digitalSignature,nonRepudiation,keyEncipherment
[ext_4]
keyUsage = digitalSignature,nonRepudiation,keyEncipherment,dataEncipherment
[ext_5]
keyUsage = keyAgreement
[ext_6]
keyUsage = keyAgreement,encipherOnly
[ext_7]
keyUsage = keyAgreement,decipherOnly
[ext_8]
keyUsage = keyAgreement,encipherOnly,decipherOnly
[ext_9]
keyUsage = keyCertSign
[ext_10]
keyUsage = cRLSign
[ext_11]
keyUsage = keyCertSign,cRLSign
[ext_12]
keyUsage = digitalSignature,keyEncipherment
extendedKeyUsage = serverAuth
[ext_13]
keyUsage = digitalSignature,keyEncipherment
extendedKeyUsage = clientAuth
[ext_14]
keyUsage = digitalSignature
extendedKeyUsage = codeSigning
[ext_15]
keyUsage = digitalSignature,keyEncipherment
extendedKeyUsage = emailProtection
[ext_16]
keyUsage = digitalSignature
extendedKeyUsage = timeStamping
[ext_17]
keyUsage = digitalSignature
extendedKeyUsage = OCSPSigning
[ext_18]
keyUsage = digitalSignature,keyEncipherment
extendedKeyUsage = serverAuth,clientAuth
[ext_19]
keyUsage = digitalSignature,keyEncipherment
extendedKeyUsage = serverAuth,clientAuth,codeSigning,emailProtection,timeStamping
[ext_20]
subjectAltName = DNS:test2.example.internal
[ext_21]
subjectAltName = DNS:test.example.internal,DNS:test2.example.internal
[ext_22]
subjectAltName = DNS:test.example.internal,DNS:test2.example.internal,DNS:test3.example.internal
[ext_23]
subjectAltName = IP:10.2.3.4
[ext_24]
subjectAltName = IP:10.1.1.1,IP:10.2.2.2
[ext_25]
subjectAltName = IP:10.1.1.1,IP:10.2.2.2,IP:10.3.3.3
[ext_26]
subjectAltName = DNS:test.example.internal,DNS:test2.example.internal,IP:10.2.3.4
[ext_27]
subjectAltName = DNS:test.example.internal,DNS:test2.example.internal,IP:10.1.1.1,IP:10.2.2.2
[ext_28]
subjectAltName = DNS:test.example.internal,DNS:test2.example.internal,DNS:test3.example.internal,IP:10.1.1.1,IP:10.2.2.2,IP:10.3.3.3
[ext_29]
subjectAltName = DNS:test2.example.internal.com
[ext_30]
subjectAltName = IP:192.168.1.1
[ext_31]
subjectAltName = DNS:test2.example.internal.com,IP:192.168.1.1
[ext_32]
keyUsage = digitalSignature,keyEncipherment
extendedKeyUsage = serverAuth,clientAuth
subjectAltName = DNS:test.example.internal,DNS:test2.example.internal,IP:10.2.3.4
[ext_33]
keyUsage = digitalSignature,nonRepudiation,keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = DNS:test.example.internal.com,DNS:test2.example.internal.com,IP:10.2.3.4
[ext_34]
keyUsage = keyEncipherment
extendedKeyUsage = clientAuth
subjectAltName = DNS:test.example.internal.com,DNS:test2.example.internal.com,IP:10.2.3.4
[ext_35]
keyUsage = digitalSignature,nonRepudiation,keyEncipherment
extendedKeyUsage = serverAuth,clientAuth
subjectAltName = DNS:test.example.internal.com,DNS:test2.example.internal.com,IP:192.168.1.1
